name: Build executable

on: push

jobs:
  build:
    name: Build executable for ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}

    env:
      APP_EXECUTABLE_NAME: pyoxidizer-test
      APP_VERSION: "0.1.0"
      PYOXIDIZER_SYSTEM_RUST: "1"
      PYOXIDIZER_VERSION: "0.19.0"

    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Ubuntu Linux",
            os: ubuntu-latest,
            platform: linux,
            pyoxidizer-build-target: install,
            pyoxidizer-platform: x86_64-unknown-linux-gnu,
            extension: "",
            compress: true,
            strip: true,
          }
        - {
            name: "macOS",
            os: macos-latest,
            platform: macos,
            pyoxidizer-build-target: install,
            pyoxidizer-platform: x86_64-apple-darwin,
            extension: "",
            compress: true,
            strip: true,
          }
        - {
            name: "Windows",
            os: windows-latest,
            platform: win64,
            pyoxidizer-build-target: install,
            pyoxidizer-platform: x86_64-pc-windows-msvc,
            extension: ".exe",
            compress: true,
            strip: false,
          }

    steps:
      - uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Restore cache
        id: restore-cache
        uses: actions/cache@v2
        with:
          key: v4-PyOxidizer-${{ runner.os }}-${{ env.PYOXIDIZER_VERSION }}
          path: |
            ~/.cargo
            ~/.cache/pyoxidizer

      - name: Install zip
        uses: montudor/action-zip@v1

      - name: Install PyOxidizer
        run: cargo install --version=${{ env.PYOXIDIZER_VERSION }} pyoxidizer

      - name: Run PyOxidizer
        shell: bash
        run: |
          pyoxidizer build --release --var VERSION ${{ env.APP_VERSION }} ${{ matrix.config.pyoxidizer-build-target }}

      - name: Strip and compress executable
        uses: svenstaro/upx-action@v2
        if: matrix.config.compress
        with:
          args: -9 -q
          file: build/${{ matrix.config.pyoxidizer-platform }}/release/${{ matrix.config.pyoxidizer-build-target }}/${{ env.APP_EXECUTABLE_NAME }}${{ matrix.config.extension }}
          strip: ${{ matrix.config.strip }}

      - name: Create zipped bundle
        shell: bash
        run: |
          mkdir -p dist/${{ matrix.config.platform }}
          mv build/${{ matrix.config.pyoxidizer-platform }}/release/${{ matrix.config.pyoxidizer-build-target }} dist/${{ matrix.config.platform }}/${{ env.APP_EXECUTABLE_NAME }}-${{ env.APP_VERSION }}
          cd dist/${{ matrix.config.platform }}
          zip -qq -r ${{ env.APP_EXECUTABLE_NAME }}-${{ env.APP_VERSION }}.zip ${{ env.APP_EXECUTABLE_NAME }}-${{ env.APP_VERSION }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: ./dist/*

